#!/usr/bin/env bash

# Script to check if specified systemd services are present and running
# Output will be saved to systemd_services_status.txt

# Define output file
OUTPUT_FILE="systemd_services_status.txt"

# ADD MORE SERVICES HERE...ALL if you can
# List of services to check
SERVICES=(
"alsa-state.service"
"anacron.service"
"avahi-daemon.service"
"clamav-daemon.service"
"cron.service"
"cups-browsed.service"
"cups.service"
"dbus.service"
"dm-event.service"
"emergency.service"
"exim4.service"
"fail2ban.service"
"getty@tty1.service"
"lightdm.service"
"lvm2-lvmpolld.service"
"lynis.service"
"plymouth-start.service"
"polkit.service"
"rc-local.service"
"rescue.service"
"rsyslog.service"
"smartmontools.service"
"ssh.service"
"suricata.service"
"systemd-ask-password-console.service"
"systemd-ask-password-plymouth.service"
"systemd-ask-password-wall.service"
"systemd-fsckd.service"
"systemd-initctl.service"
"systemd-rfkill.service"
"udisks2.service"
"unattended-upgrades.service"
"user@1000.service"
"vboxadd-service.service"
"wpa_supplicant.service"

)



# Function to check service status
check_service() {
    local service=$1
    local status_line=""

    # Check if service unit file exists
    if systemctl list-unit-files --type=service | grep -q "^$service\.service"; then
        status_line="$service: PRESENT"

        # Check if service is enabled
        if systemctl is-enabled --quiet "$service" 2>/dev/null; then
            status_line="$status_line, ENABLED"
        else
            status_line="$status_line, DISABLED"
        fi

        # Check if service is active/running
        if systemctl is-active --quiet "$service" 2>/dev/null; then
            status_line="$status_line, RUNNING"
        else
            status_line="$status_line, NOT RUNNING"
        fi
    else
        status_line="$service: NOT PRESENT"
    fi

    echo "$status_line"
}

# Create header for output file
{
    echo "====================================================="
    echo "  Systemd Services Status Check - $(date '+%Y-%m-%d %H:%M:%S')"
    echo "====================================================="
    echo ""
    echo "Service Name       Status"
    echo "------------       ------"
} > "$OUTPUT_FILE"

# Check each service and append to output file
for service in "${SERVICES[@]}"; do
    check_service "$service" >> "$OUTPUT_FILE"
done

# Add summary information
{
    echo ""
    echo "====================================================="
    echo "Summary:"
    echo "Total services checked: ${#SERVICES[@]}"

    # Count present services
    present_count=$(grep -c "PRESENT" "$OUTPUT_FILE")
    echo "Services present: $present_count"

    # Count running services
    running_count=$(grep -c "RUNNING" "$OUTPUT_FILE")
    echo "Services running: $running_count"

    echo "====================================================="
    echo ""
    echo "This report was generated by HARDN-XDR service checker"
    echo "For more information, see the HARDN-XDR documentation"
} >> "$OUTPUT_FILE"

echo "Service status check completed. Results saved to $OUTPUT_FILE"

# Display the file content
echo ""
echo "File content:"
echo "-------------"
cat "$OUTPUT_FILE"
